---
jupyter: python3
---

```{python}
import s3fs
import pandas as pd

path = "https://minio.lab.sspcloud.fr/projet-budget-famille/data/stats-desc-before-training/ddc_vs_annotations_coicop.parquet"
fs = s3fs.S3FileSystem("https://minio.lab.sspcloud.fr")
```

```{python}
df = pd.read_parquet(path)
```

```{python}
import numpy as np

def aggregate_by_level(df, level=2):
    df = df.copy()
    
    # Créer la colonne variete_parent
    df["variete_parent"] = df["variete"].apply(
        lambda x: ".".join(x.split(".")[:level])
    )
    
    # Agrégation des fréquences
    agg_df = df.groupby("variete_parent").agg({
        "frequence_annot": "sum",
        "frequence_ddc": "sum"
    }).reset_index()
    
    # Ajouter +0.5 pour éviter division par 0 (correction de continuité)
    agg_df["relative_risk"] = (
        (agg_df["frequence_annot"] + 0.5) / (agg_df["frequence_ddc"] + 0.5)
    )
    agg_df["log_rr"] = np.log(agg_df["relative_risk"])
    
    return agg_df
```

```{python}
from plotnine import (
    ggplot, aes, geom_bar, coord_flip, facet_wrap, theme_bw, labs
)

def plot_relative_risk_faceted(df, level_facet=2, level_display=3):
    # Créer une colonne avec les noms à afficher (level_display)
    df = df.copy()
    df["variete_level_display"] = df["variete"].apply(
        lambda x: ".".join(x.split(".")[:level_display])
    )
    
    # Agréger au niveau d’affichage
    agg_df = aggregate_by_level(df, level=level_display)
    agg_df = agg_df.rename(columns={"variete_parent": "variete_level_display"})
    
    # Ajouter la colonne de facettage (niveau supérieur)
    agg_df["variete_parent"] = agg_df["variete_level_display"].apply(
        lambda x: ".".join(x.split(".")[:level_facet])
    )
    
    
    # Trier les étiquettes pour l’axe Y
    agg_df["variete_level_display"] = pd.Categorical(
        agg_df["variete_level_display"],
        categories=sorted(agg_df["variete_level_display"]),
        ordered=True
    )

    agg_df = agg_df.loc[agg_df["variete_level_display"].astype(str) != agg_df["variete_parent"].astype(str)]
    
    # Créer le plot
    plot = (
        ggplot(agg_df, aes(y="relative_risk", x="variete_level_display"))
        + geom_bar(stat="identity")
        + facet_wrap("~variete_parent", scales="free")
        + coord_flip()
        + theme_bw()
        + labs(
            title=f"Relative Risk (grouped by level {level_facet}, showing level {level_display})",
            x="Relative Risk",
            y="Variete"
        )
    )
    return plot
```

```{python}
plot_relative_risk_faceted(
    df,
    level_facet=1, level_display=2)
```

